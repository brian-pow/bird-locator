[{"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/SightingsList.js":"1","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/App.js":"2","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/actions/index.js":"3","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/Chatbot.js":"4","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/TypedLine.js":"5","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/NonTypedElement.js":"6","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/apis/api.js":"7","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/reducers/index.js":"8","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/index.js":"9"},{"size":2400,"mtime":1612744396537,"results":"10","hashOfConfig":"11"},{"size":449,"mtime":1615062544955,"results":"12","hashOfConfig":"11"},{"size":1776,"mtime":1615063046791,"results":"13","hashOfConfig":"11"},{"size":9758,"mtime":1615064170277,"results":"14","hashOfConfig":"11"},{"size":1203,"mtime":1615062644570,"results":"15","hashOfConfig":"11"},{"size":417,"mtime":1615062652743,"results":"16","hashOfConfig":"11"},{"size":180,"mtime":1615064551322,"results":"17","hashOfConfig":"11"},{"size":994,"mtime":1615063056510,"results":"18","hashOfConfig":"11"},{"size":431,"mtime":1611430928542,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1bfnj2p",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/SightingsList.js",["42"],"import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getRecentSpeciesSightings } from \"../actions\";\n\nimport { FaDirections } from \"react-icons/fa\";\nimport { Redirect } from \"react-router\";\n\nconst SightingsList = ({\n  selectedBird,\n  recentSightings,\n  getRecentSpeciesSightings,\n  zip,\n}) => {\n  useEffect(() => {\n    if (!selectedBird || !zip) return null;\n    else {\n      getRecentSpeciesSightings(selectedBird.speciesCode, zip.zip, zip.stateID);\n    }\n  }, []);\n\n  const dateToString = (date) => {\n    let monthArray = [\n      \"JAN\",\n      \"FEB\",\n      \"MAR\",\n      \"APR\",\n      \"MAY\",\n      \"JUN\",\n      \"JUL\",\n      \"AUG\",\n      \"SEP\",\n      \"OCT\",\n      \"NOV\",\n      \"DEC\",\n    ];\n\n    let monthNumber = parseInt(date.substring(5, 7));\n    let dateNumber = parseInt(date.substring(8, 10));\n    let dateString = `${monthArray[monthNumber - 1]} ${dateNumber}`;\n    return dateString;\n  };\n\n  const buildList = () => {\n    if (recentSightings.length === 0) {\n      return null;\n    } else {\n      return recentSightings.map((bird) => {\n        return (\n          <div key={bird.lat} className=\"sightingCard\">\n            <div className=\"leftSide\">\n              <div className=\"\">{dateToString(bird.obsDt)}</div>\n              <div className=\"\">{bird.locName}</div>\n              <div className=\"distance\">\n                {Math.round(bird.distanceFromCurrentLocation)} miles away\n              </div>\n            </div>\n            <div className=\"rightSide\">\n              <a href={`http://maps.apple.com/?q=${bird.lat},${bird.lng}`}>\n                <FaDirections size={32} />\n              </a>\n            </div>\n            <br className=\"lineBreak\" />\n          </div>\n        );\n      });\n    }\n  };\n\n  if (!selectedBird || !zip) return <Redirect to=\"/\" />;\n  return (\n    <div>\n      <div className=\"sightingsListHeaderDiv\">\n        <h1 className=\"sightingsListHeader\">{selectedBird.comName}</h1>\n        <div>\n          <h3 className=\"sightingsListSciName\">{selectedBird.sciName}</h3>\n        </div>\n      </div>\n      <div className=\"sightingsListContainer\">{buildList()}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedBird: state.selectedBird,\n    recentSightings: state.recentSightings,\n    zip: state.zip,\n  };\n};\n\nexport default connect(mapStateToProps, { getRecentSpeciesSightings })(\n  SightingsList\n);\n",["43","44"],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/App.js",[],["45","46"],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/actions/index.js",["47"],"import ebird from \"../apis/api\";\nimport states from \"../apis/zipData.json\";\n\n//Set zip code (current location)\nexport const setZipCode = (zip) => {\n  return {\n    type: \"SET_ZIP\",\n    payload: states[zip],\n  };\n};\n\n//Get all possible sightings near current location (to help user select a realistic bird to continue with)\nexport const getPossibleSightings = (state) => async (dispatch) => {\n  const response = await ebird.get(`data/obs/US-${state}/recent`);\n\n  dispatch({ type: \"ADD_POSSIBLE_SIGHTINGS\", payload: response.data });\n};\n\n//Select a bird to be searched for\nexport const selectBird = (bird) => {\n  return {\n    type: \"SELECT_BIRD\",\n    payload: bird,\n  };\n};\n\n//Get sightings of selected bird in a specific area\nexport const getRecentSpeciesSightings = (speciesCode, zip, state) => async (\n  dispatch\n) => {\n  const response = await ebird.get(\n    `data/obs/US-${state}/recent/${speciesCode}`\n  );\n\n  let payload;\n\n  //Only act on first 25 sightings\n  if (response.data.length >= 26) {\n    payload = response.data.slice(0, 25);\n  } else {\n    payload = response.data;\n  }\n\n  let destinations = [];\n  payload.map((loc) => {\n    destinations.push({ lat: loc.lat, lng: loc.lng });\n  });\n\n  const origin = zip;\n\n  //Get driving distance to each sighting from current location\n  window.googleMaps.getDistanceMatrix(\n    {\n      origins: [origin],\n      destinations: destinations,\n      travelMode: \"DRIVING\",\n    },\n    callback\n  );\n\n  const metersInMile = 1609.34;\n\n  function callback(response, status) {\n    for (let i = 0; i < payload.length; i++) {\n      payload[i].distanceFromCurrentLocation =\n        response.rows[0].elements[i].distance.value / metersInMile;\n    }\n\n    dispatch({\n      type: \"LIST_RECENT_SIGHTINGS\",\n      payload: payload,\n    });\n  }\n};\n","/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/Chatbot.js",[],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/TypedLine.js",[],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/components/NonTypedElement.js",[],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/apis/api.js",[],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/reducers/index.js",[],"/Users/brianpowers/Documents/C0DE/Projects/Web/bird-sightings/src/index.js",[],{"ruleId":"48","severity":1,"message":"49","line":19,"column":6,"nodeType":"50","endLine":19,"endColumn":8,"suggestions":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"54","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":45,"column":21,"nodeType":"60","messageId":"61","endLine":45,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getRecentSpeciesSightings', 'selectedBird', and 'zip'. Either include them or remove the dependency array. If 'getRecentSpeciesSightings' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["62"],"no-native-reassign",["63"],"no-negated-in-lhs",["64"],["63"],["64"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"65","fix":"66"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getRecentSpeciesSightings, selectedBird, zip]",{"range":"67","text":"68"},[498,500],"[getRecentSpeciesSightings, selectedBird, zip]"]